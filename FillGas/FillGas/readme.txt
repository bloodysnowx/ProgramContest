1. 次のガソリンスタンドまで走る
2. 給油する場合としない場合で分岐する(しない場合を優先する)
3. 次のガソリンスタンドにたどり着けなかった場合、枝切り
4. 給油せずにゴールに到達できた場合、最後に給油したポイントの結果を保存し、次の候補の探索にうつる
5. 

二分木探索
到達できない場合は65535を返す
到達できる場合は0を返す
給油した場合は+1する

計算回数は O(2^n)

「ガソリンスタンド 給油量が多いのが正義」理論
1. 現在の燃料でゴールに到達できる場合は現在の値を返す
2. 現在の燃料で到達できる範囲内でもっとも給油量が多いガソリンスタンドで給油し、1に戻る

計算回数は O(n^2)
ソートは O(nLog(n))なので、使用しても大して計算速度の省略にならないし、下手すれば伸びるので却下