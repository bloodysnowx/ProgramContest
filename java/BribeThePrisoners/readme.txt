1. 最後にn_0を解放した場合を計算
2. その1つ前にn_1を解放した場合の最小値を計算
(n_0 -> n_1 and n_1 -> n_0 の最小値)
3. その1つ前にn_2を解放した場合の最小値を計算
(n_2 -> (n_0, n_1), n_1 -> (n_0, n_2), n_2 -> (n_0, n_1) の最小値)
4. その1つ前にn_3を解放した場合の最小値を計算
(n_3 -> (n_0, n_1, n_2), n_2 ... , n_0 -> (n_1, n_2, n_3) の最小値)
5. 以下同様に
.
.
.
m. 全てを解放した場合が計算完了

解法2

a_B = A_b = 全個数 - 1
A_B = 全個数 - 1 + A_b

a_B_C = A_B_C - A_b
A_B_c = A_B_C - b_C
A_B_C = 全個数 - 1 + A_b + b_C

A_B_C_D = 全個数 - 1 + MIN(A_b + b_C_D, A_B_c + c_D)

A_B_C_D_E = ry

1. 両端に囚人を追加する
2. A_b, B_c, ... を計算する
3. A_B, B_C, ... を計算する
4. A_B_C, B_C_D, ... を計算する
5. 以下同様に
6. A_B_..._Y_Z を計算する
7. a_B_..._Y_z = A_B_..._Y_Z - A_a - y_Z を出力する

解法3

A_B_C = 全個数 - 3
A_B_C_D = 全個数 - 3 + MIN(A_B_C, B_C_D)
A_B_C_D_E = 全個数 - 3 + MIN(A_B_C_D, A_B_C + C_D_E, B_C_D_E)
A_B_C_D_E_F = 全個数 - 3 + MIN(A_B_C_D_E, A_B_C_D + D_E_F, A_B_C + C_D_E_F, B_C_D_E_F)

1. 両端に囚人を追加する
2. A_B_C, B_C_D, ... を計算する
3. A_B_C_D, B_C_D_E, ... を計算する
4. ...
